{"version":3,"sources":["webpack:///./src/pages/index1.js","webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js"],"names":["IndexPage","postList","allMarkdownRemark","edges","title","map","node","slug","fields","frontmatter","date","description","category","color","timeToRead","PostItemLink","styled","Link","PostItemWrapper","section","PostItemTag","div","props","bg","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItem","to","prototype","PropTypes","string","isRequired"],"mappings":"yJAuDeA,UA/CG,WAAO,IAuBfC,EAvBc,OACZC,kBAsB2BC,MACnC,OACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,SACVH,EAASI,KAAI,oBACTC,KACaC,EAFJ,EAENC,OAAUD,KAFJ,IAGNE,YAAeL,EAHT,EAGSA,MAAOM,EAHhB,EAGgBA,KAAMC,EAHtB,EAGsBA,YAAaC,EAHnC,EAGmCA,SAAUC,EAH7C,EAG6CA,MACnDC,EAJM,EAINA,WAJM,OAML,kBAAC,IAAD,CACGP,KAAMA,EACNM,MAAOA,EACPT,MAAOA,EACPQ,SAAUA,EACVF,KAAMA,EACNI,WAAYA,EACZH,YAAaA,U,qFC7CpBI,EAAeC,YAAOC,KAAV,2EAAGD,CAAH,6EASZE,EAAkBF,IAAOG,QAAV,8EAAGH,CAAH,mGAQfI,EAAcJ,IAAOK,IAAV,0EAAGL,CAAH,kMAER,SAAAM,GAAK,OAAIA,EAAMC,MAYlBC,EAAeR,IAAOK,IAAV,2EAAGL,CAAH,4DAMZS,EAAeT,IAAOU,KAAV,2EAAGV,CAAH,uBAIZW,EAAgBX,IAAOY,GAAV,4EAAGZ,CAAH,8DAMba,EAAsBb,IAAOc,EAAV,kFAAGd,CAAH,uDC3C1Be,EAAW,SAAC,GAAD,IACbxB,EADa,EACbA,KACAM,EAFa,EAEbA,MACAD,EAHa,EAGbA,SACAF,EAJa,EAIbA,KACAI,EALa,EAKbA,WACAV,EANa,EAMbA,MACAO,EAPa,EAObA,YAPa,OASL,kBAAC,EAAD,CAAgBqB,GAAIzB,GACpB,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAegB,GAAIV,GAAQD,GAC3B,kBAAC,EAAD,KACI,kBAAC,EAAD,KAAiBF,EAAjB,MAA0BI,EAA1B,mBACA,kBAAC,EAAD,KACCV,GAED,kBAAC,EAAD,KACCO,OAOjBoB,EAASE,UAAY,CACjB1B,KAAM2B,IAAUC,OAAOC,WACvBvB,MAAOqB,IAAUC,OACjBvB,SAAUsB,IAAUC,OAAOC,WAC3B1B,KAAMwB,IAAUC,OAAOC,WACvBtB,WAAYoB,IAAUC,OAAOC,WAC7BhC,MAAO8B,IAAUC,OAAOC,WACxBzB,YAAauB,IAAUC,OAAOC,YAGnBL,O","file":"component---src-pages-index-1-js-ec8c938b84825f440bda.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\n\nimport PostItem from \"../components/PostItem\"\n\nconst IndexPage = () => {\n    const { allMarkdownRemark } = useStaticQuery(\n        graphql`\n        query PostItem {\n            allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n                edges {\n                node {\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                    title\n                    date(formatString: \"DD [de] MMMM [de] YYYY\", locale: \"pt-br\")\n                    description\n                    category\n                    color\n                    }\n                    timeToRead\n                }\n                }\n            }\n        }`)\n\n    const postList = allMarkdownRemark.edges\n    return (\n    <Layout>\n        <SEO title=\"Home\" />\n        {postList.map((\n            {node: {\n                fields: { slug },\n                frontmatter: { title, date, description, category, color},\n                timeToRead\n            }}) => (\n                 <PostItem\n                    slug={slug}\n                    color={color}\n                    title={title}\n                    category={category}\n                    date={date}\n                    timeToRead={timeToRead}\n                    description={description}\n                />\n            ))}\n    </Layout>\n    )\n}\n\nexport default IndexPage\n","import styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nexport const PostItemLink = styled(Link)`\n  color: #8899a6;\n  display: flex;\n  text-decoration: none;\n  &:hover {\n    color: #1fa1f2;\n  }\n`\n\nexport const PostItemWrapper = styled.section`\n  align-items: center;\n  border-bottom: 1px solid #38444d;\n  display: flex;\n  padding: 2rem 3rem;\n  width: 100%;\n`\n\nexport const PostItemTag = styled.div`\n  align-items: center;\n  background: ${props => props.bg};\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  font-size: 1.3rem;\n  font-weight: 700;\n  justify-content: center;\n  min-height: 90px;\n  min-width: 90px;\n  text-transform: uppercase;\n`\n\nexport const PostItemInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 1.5rem;\n`\n\nexport const PostItemDate = styled.time`\n  font-size: 0.9rem;\n`\n\nexport const PostItemTitle = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin: 0.2rem 0 0.5rem;\n`\n\nexport const PostItemDescription = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 1.2;\n`","import React from \"react\"\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport * as S from \"./styled\"\n\n\nconst PostItem = ({\n    slug,\n    color,\n    category,\n    date,\n    timeToRead,\n    title,\n    description\n}) => (\n            <S.PostItemLink to={slug}>\n            <S.PostItemWrapper>\n            <S.PostItemTag bg={color}>{category}</S.PostItemTag>\n            <S.PostItemInfo>\n                <S.PostItemDate>{date} â€¢ {timeToRead} min de leitura</S.PostItemDate>\n                <S.PostItemTitle>\n                {title}\n                </S.PostItemTitle>\n                <S.PostItemDescription>\n                {description}\n                </S.PostItemDescription>\n            </S.PostItemInfo>\n            </S.PostItemWrapper>\n        </S.PostItemLink>\n    )\n\nPostItem.prototype = {\n    slug: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    category: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    timeToRead: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n}\n\nexport default PostItem"],"sourceRoot":""}