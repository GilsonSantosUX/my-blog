{"version":3,"sources":["webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js","webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js"],"names":["PaginationWrapper","styled","section","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","to","query","BlogList","props","postList","data","allMarkdownRemark","edges","pageContext","Layout","title","map","node","frontmatter","color","category","date","description","timeToRead","slug","fields","PostItem","PostItemLink","Link","PostItemWrapper","PostItemTag","div","bg","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","prototype","PropTypes","string","isRequired"],"mappings":"wJAEaA,E,KAAoBC,EAAOC,QAAV,4EAAGD,CAAH,sNC8BfE,EA1BI,SAAC,GAAD,IACfC,EADe,EACfA,QACAC,EAFe,EAEfA,OACAC,EAHe,EAGfA,YACAC,EAJe,EAIfA,SACAC,EALe,EAKfA,SACAC,EANe,EAMfA,SANe,OAQf,kBAAC,EAAD,MACEL,GAAW,kBAAC,IAAD,CAAMM,GAAIF,GAAV,qBACb,2BACGF,EADH,OACoBC,IAElBF,GAAU,kBAAC,IAAD,CAAMK,GAAID,GAAV,sBCnBhB,sCAQA,IA2CaE,EAAK,aA0BHC,UArEE,SAAAC,GACf,IAAMC,EAAWD,EAAME,KAAKC,kBAAkBC,MADtB,EAGUJ,EAAMK,YAAhCZ,EAHgB,EAGhBA,YAAaC,EAHG,EAGHA,SACfH,EAA0B,IAAhBE,EACVD,EAASC,IAAgBC,EACzBC,EAAWF,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChEG,EAAQ,UAAYH,EAAc,GAExC,OACE,kBAACa,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACVN,EAASO,KACR,oBACEC,KADF,IAEIC,YAAeC,EAFnB,EAEmBA,MAAOC,EAF1B,EAE0BA,SAAUC,EAFpC,EAEoCA,KAAMC,EAF1C,EAE0CA,YAAaP,EAFvD,EAEuDA,MACnDQ,EAHJ,EAGIA,WACUC,EAJd,EAIIC,OAAUD,KAJd,OAOE,kBAACE,EAAA,EAAD,CACEF,KAAMA,EACNL,MAAOA,EACPC,SAAUA,EACVC,KAAMA,EACNE,WAAYA,EACZR,MAAOA,EACPO,YAAaA,OAInB,kBAAC,EAAD,CACMvB,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,O,qFC1CTuB,EAAe/B,YAAOgC,KAAV,2EAAGhC,CAAH,6EASZiC,EAAkBjC,IAAOC,QAAV,8EAAGD,CAAH,mGAQfkC,EAAclC,IAAOmC,IAAV,0EAAGnC,CAAH,kMAER,SAAAY,GAAK,OAAIA,EAAMwB,MAYlBC,EAAerC,IAAOmC,IAAV,2EAAGnC,CAAH,4DAMZsC,EAAetC,IAAOuC,KAAV,2EAAGvC,CAAH,uBAIZwC,EAAgBxC,IAAOyC,GAAV,4EAAGzC,CAAH,8DAMb0C,EAAsB1C,IAAO2C,EAAV,kFAAG3C,CAAH,uDC3C1B8B,EAAW,SAAC,GAAD,IACbF,EADa,EACbA,KACAL,EAFa,EAEbA,MACAC,EAHa,EAGbA,SACAC,EAJa,EAIbA,KACAE,EALa,EAKbA,WACAR,EANa,EAMbA,MACAO,EAPa,EAObA,YAPa,OASL,kBAAC,EAAD,CAAgBjB,GAAImB,GACpB,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAeQ,GAAIb,GAAQC,GAC3B,kBAAC,EAAD,KACI,kBAAC,EAAD,KAAiBC,EAAjB,MAA0BE,EAA1B,mBACA,kBAAC,EAAD,KACCR,GAED,kBAAC,EAAD,KACCO,OAOjBI,EAASc,UAAY,CACjBhB,KAAMiB,IAAUC,OAAOC,WACvBxB,MAAOsB,IAAUC,OACjBtB,SAAUqB,IAAUC,OAAOC,WAC3BtB,KAAMoB,IAAUC,OAAOC,WACvBpB,WAAYkB,IAAUC,OAAOC,WAC7B5B,MAAO0B,IAAUC,OAAOC,WACxBrB,YAAamB,IAAUC,OAAOC,YAGnBjB","file":"component---src-templates-blog-list-js-3b4bdf5cbc9a38935f94.js","sourcesContent":["import styled from 'styled-components'\n\nexport const PaginationWrapper = styled.section`\n align-items: center;\n  border-top: 1px solid #38444d;\n  color: #8899a6;\n  display: flex;\n  padding: 1.5rem 3rem;\n  justify-content: space-between;\n  a {\n    color: #8899a6;\n    text-decoration: none;\n    transition: color 0.5s;\n    &:hover {\n      color: #1fa1f2;\n    }\n  }\n`","import React from 'react'\nimport propTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport * as S from \"./styled\"\n\nconst Pagination = ({\n    isFirst,\n    isLast,\n    currentPage,\n    numPages,\n    prevPage,\n    nextPage,\n}) => (\n    <S.PaginationWrapper>\n    {!isFirst && <Link to={prevPage}>← página anterior</Link>}\n    <p>\n      {currentPage} de {numPages}\n    </p>\n    {!isLast && <Link to={nextPage}>proxima página →</Link>}\n  </S.PaginationWrapper>\n)\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  currentPage: propTypes.number.isRequired,\n  numPages: propTypes.number.isRequired,\n  prevPage: propTypes.string,\n  nextPage: propTypes.string,\n}\n\nexport default Pagination","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport PostItem from \"../components/PostItem\"\nimport Pagination from '../components/Pagination'\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges\n\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`\n  const nextPage = `/page/${currentPage + 1}`\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      {postList.map(\n        ({\n          node: {\n            frontmatter: { color, category, date, description, title },\n            timeToRead,\n            fields: { slug },\n          },\n        }) => (\n          <PostItem\n            slug={slug}\n            color={color}\n            category={category}\n            date={date}\n            timeToRead={timeToRead}\n            title={title}\n            description={description}\n          />\n        )\n      )}\n      <Pagination\n            isFirst={isFirst}\n            isLast={isLast}\n            currentPage={currentPage}\n            numPages={numPages}\n            prevPage={prevPage}\n            nextPage={nextPage}\n        />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            color\n            category\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            description\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default BlogList","import styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nexport const PostItemLink = styled(Link)`\n  color: #8899a6;\n  display: flex;\n  text-decoration: none;\n  &:hover {\n    color: #1fa1f2;\n  }\n`\n\nexport const PostItemWrapper = styled.section`\n  align-items: center;\n  border-bottom: 1px solid #38444d;\n  display: flex;\n  padding: 2rem 3rem;\n  width: 100%;\n`\n\nexport const PostItemTag = styled.div`\n  align-items: center;\n  background: ${props => props.bg};\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  font-size: 1.3rem;\n  font-weight: 700;\n  justify-content: center;\n  min-height: 90px;\n  min-width: 90px;\n  text-transform: uppercase;\n`\n\nexport const PostItemInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 1.5rem;\n`\n\nexport const PostItemDate = styled.time`\n  font-size: 0.9rem;\n`\n\nexport const PostItemTitle = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin: 0.2rem 0 0.5rem;\n`\n\nexport const PostItemDescription = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 1.2;\n`","import React from \"react\"\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport * as S from \"./styled\"\n\n\nconst PostItem = ({\n    slug,\n    color,\n    category,\n    date,\n    timeToRead,\n    title,\n    description\n}) => (\n            <S.PostItemLink to={slug}>\n            <S.PostItemWrapper>\n            <S.PostItemTag bg={color}>{category}</S.PostItemTag>\n            <S.PostItemInfo>\n                <S.PostItemDate>{date} • {timeToRead} min de leitura</S.PostItemDate>\n                <S.PostItemTitle>\n                {title}\n                </S.PostItemTitle>\n                <S.PostItemDescription>\n                {description}\n                </S.PostItemDescription>\n            </S.PostItemInfo>\n            </S.PostItemWrapper>\n        </S.PostItemLink>\n    )\n\nPostItem.prototype = {\n    slug: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    category: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    timeToRead: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n}\n\nexport default PostItem"],"sourceRoot":""}