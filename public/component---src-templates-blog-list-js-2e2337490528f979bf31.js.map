{"version":3,"sources":["webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js"],"names":["PaginationWrapper","styled","section","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","to","query","BlogList","props","postList","data","allMarkdownRemark","edges","pageContext","Layout","title","map","node","frontmatter","color","category","date","description","timeToRead","slug","fields","PostItem"],"mappings":"wJAEaA,E,KAAoBC,EAAOC,QAAV,4EAAGD,CAAH,sNC8BfE,EA1BI,SAAC,GAAD,IACfC,EADe,EACfA,QACAC,EAFe,EAEfA,OACAC,EAHe,EAGfA,YACAC,EAJe,EAIfA,SACAC,EALe,EAKfA,SACAC,EANe,EAMfA,SANe,OAQf,kBAAC,EAAD,MACEL,GAAW,kBAAC,IAAD,CAAMM,GAAIF,GAAV,qBACb,2BACGF,EADH,OACoBC,IAElBF,GAAU,kBAAC,IAAD,CAAMK,GAAID,GAAV,sBCnBhB,sCAQA,IA2CaE,EAAK,aA0BHC,UArEE,SAAAC,GACf,IAAMC,EAAWD,EAAME,KAAKC,kBAAkBC,MADtB,EAGUJ,EAAMK,YAAhCZ,EAHgB,EAGhBA,YAAaC,EAHG,EAGHA,SACfH,EAA0B,IAAhBE,EACVD,EAASC,IAAgBC,EACzBC,EAAWF,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChEG,EAAQ,UAAYH,EAAc,GAExC,OACE,kBAACa,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACVN,EAASO,KACR,oBACEC,KADF,IAEIC,YAAeC,EAFnB,EAEmBA,MAAOC,EAF1B,EAE0BA,SAAUC,EAFpC,EAEoCA,KAAMC,EAF1C,EAE0CA,YAAaP,EAFvD,EAEuDA,MACnDQ,EAHJ,EAGIA,WACUC,EAJd,EAIIC,OAAUD,KAJd,OAOE,kBAACE,EAAA,EAAD,CACEF,KAAMA,EACNL,MAAOA,EACPC,SAAUA,EACVC,KAAMA,EACNE,WAAYA,EACZR,MAAOA,EACPO,YAAaA,OAInB,kBAAC,EAAD,CACMvB,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA","file":"component---src-templates-blog-list-js-2e2337490528f979bf31.js","sourcesContent":["import styled from 'styled-components'\n\nexport const PaginationWrapper = styled.section`\n align-items: center;\n  border-top: 1px solid var(--borders);\n  color: var(--texts);\n  display: flex;\n  padding: 1.5rem 3rem;\n  justify-content: space-between;\n  a {\n    color: var(--texts);\n    text-decoration: none;\n    transition: color 0.5s;\n    &:hover {\n      color: var(--highlight);\n    }\n  }\n`","import React from 'react'\nimport propTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport * as S from \"./styled\"\n\nconst Pagination = ({\n    isFirst,\n    isLast,\n    currentPage,\n    numPages,\n    prevPage,\n    nextPage,\n}) => (\n    <S.PaginationWrapper>\n    {!isFirst && <Link to={prevPage}>← página anterior</Link>}\n    <p>\n      {currentPage} de {numPages}\n    </p>\n    {!isLast && <Link to={nextPage}>proxima página →</Link>}\n  </S.PaginationWrapper>\n)\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  currentPage: propTypes.number.isRequired,\n  numPages: propTypes.number.isRequired,\n  prevPage: propTypes.string,\n  nextPage: propTypes.string,\n}\n\nexport default Pagination","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport PostItem from \"../components/PostItem\"\nimport Pagination from '../components/Pagination'\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges\n\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`\n  const nextPage = `/page/${currentPage + 1}`\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      {postList.map(\n        ({\n          node: {\n            frontmatter: { color, category, date, description, title },\n            timeToRead,\n            fields: { slug },\n          },\n        }) => (\n          <PostItem\n            slug={slug}\n            color={color}\n            category={category}\n            date={date}\n            timeToRead={timeToRead}\n            title={title}\n            description={description}\n          />\n        )\n      )}\n      <Pagination\n            isFirst={isFirst}\n            isLast={isLast}\n            currentPage={currentPage}\n            numPages={numPages}\n            prevPage={prevPage}\n            nextPage={nextPage}\n        />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            color\n            category\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            description\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default BlogList"],"sourceRoot":""}